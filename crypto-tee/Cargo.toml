[package]
name = "crypto-tee"
version.workspace = true
edition.workspace = true
authors.workspace = true
license.workspace = true
repository.workspace = true
documentation.workspace = true
description = "Core CryptoTEE API - Hardware-backed key management and cryptographic operations"
keywords = ["crypto", "tee", "hardware", "security", "key-management"]
categories = ["cryptography", "hardware-support"]

[dependencies]
crypto-tee-vendor = { path = "../crypto-tee-vendor" }
crypto-tee-platform = { path = "../crypto-tee-platform" }
thiserror = { workspace = true }
anyhow = { workspace = true }
tracing = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
zeroize = { workspace = true }
async-trait = { workspace = true }
tokio = { workspace = true, features = ["sync", "fs", "io-util"] }
chrono = { version = "0.4", features = ["serde"] }
uuid = { version = "1.10", features = ["v4", "serde"] }
ring = { workspace = true }
bincode = "1.3"
hex = "0.4"
rand = "0.8"

[dev-dependencies]
tokio = { workspace = true }
mockall = { workspace = true }
proptest = { workspace = true }
criterion = { workspace = true, features = ["html_reports", "async_tokio"] }
futures = "0.3"
tempfile = "3.8"
tracing-subscriber = "0.3"

[[bench]]
name = "performance_tests"
harness = false

# WASM support
[target.'cfg(target_arch = "wasm32")'.dependencies]
getrandom = { version = "0.2", features = ["js"] }
tokio = { workspace = true, features = ["sync", "time"], default-features = false }

[features]
default = ["software-fallback"]
software-fallback = ["crypto-tee-vendor/software-fallback"]
vendor-samsung = ["crypto-tee-vendor/samsung"]
vendor-apple = ["crypto-tee-vendor/apple"]
vendor-qualcomm = ["crypto-tee-vendor/qualcomm"]
full = [
    "vendor-samsung",
    "vendor-apple", 
    "vendor-qualcomm"
]